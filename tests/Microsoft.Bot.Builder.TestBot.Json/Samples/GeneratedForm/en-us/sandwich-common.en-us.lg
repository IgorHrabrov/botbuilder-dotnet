> This file contains the generic templates to use for properties of particular types.
> It is copied to the output because it has the locale in it.
> They are called by property specific .lg files.

> TODO: The turn parameters are because of a bug in the LG engine where parameterized templates do not have access to the
> global scopes.  There is a DCR filed and when fized we should revert here and in the calls to this.

>>> Ask prompts <<<

> TODO: We should look at the schema and if a few items list them or do cards or..
# askEnum(property, name)
- Which value do you want for {name}?

# askNumber(property, name)
- IF: {turn.schema.properties[property].minimum && turn.schema.properties[property].maximum}
- Enter a number for {name} between {turn.schema.properties[property].minimum} and {turn.schema.properties[property].maximum}
- ELSE:
- Enter a number for {name}

# askString(property, name)
- Enter a value for {name}

>>> Help messages <<<
# helpProperty(property, name)
- Possible values for {name} include: \[{join(turn.schema.properties[property].enum, ',')}\]

# clarifyEnum(property, name)
- Please choose a value for {name} from \[{join(foreach(turn.dialogEvent.value.entity.value, val, bread(val)), ',')}\]

> TODO: Need to generate this
# bread(val)
- IF: {val == 'honeyWheat'}
- honey wheat
- ELSE:
- wheat grain

# cancel
- Do you want to end the conversation? (yes/no)

# unexpectedPropertySet(property, entity, name)
- {name} is set as {toLower(entity)}.

# unexpectedPropertyChange(property, entity, name, oldentity)
- {name} is changed from {toLower(oldentity)} to {toLower(entity)}.

# chooseProperties
- Did you mean {join(foreach(turn.dialogevent.value, choice, chooseProperty(choice)), " or ")}

# chooseProperty(property)
- "{property.entity.text}" as {property.property}